// Code generated by goa v3.3.1, DO NOT EDIT.
//
// tickets client
//
// Command:
// $ goa gen github.com/pastelnetwork/walletnode/rest/design

package tickets

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "tickets" service client.
type Client struct {
	AddEndpoint  goa.Endpoint
	ListEndpoint goa.Endpoint
}

// NewClient initializes a "tickets" service client given the endpoints.
func NewClient(add, list goa.Endpoint) *Client {
	return &Client{
		AddEndpoint:  add,
		ListEndpoint: list,
	}
}

// Add calls the "add" endpoint of the "tickets" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// List calls the "list" endpoint of the "tickets" service.
func (c *Client) List(ctx context.Context) (res StoredTicketCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(StoredTicketCollection), nil
}
