// Code generated by goa v3.3.1, DO NOT EDIT.
//
// artworks service
//
// Command:
// $ goa gen github.com/pastelnetwork/walletnode/api/design

package artworks

import (
	"context"
)

// Pastel Artwork
type Service interface {
	// Registers a new art.
	Register(context.Context, *RegisterPayload) (res string, err error)
	// Upload an image that is used when registering the artwork.
	UploadImage(context.Context, *ImageUploadPayload) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "artworks"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"register", "uploadImage"}

// RegisterPayload is the payload type of the artworks service register method.
type RegisterPayload struct {
	// Name of the artwork
	Name string
	// Description of the artwork
	Description *string
	// Keywords
	Keywords *string
	// Series name
	SeriesName *string
	// Number of copies issued
	IssuedCopies int
	// Uploaded Image ID
	ImageID string
	// Artwork creation video youtube URL
	YoutubeURL *string
	// Artist's PastelID
	ArtistPastelid string
	// Name of the artist
	ArtistName string
	// Artist website URL
	ArtistWebsiteURL *string
	// Spendable address
	SpendableAddress string
	NetworkFee       float32
}

// ImageUploadPayload is the payload type of the artworks service uploadImage
// method.
type ImageUploadPayload struct {
	// File to upload
	File []byte
}

type BadRequest struct {
	InnerError *struct {
		// Code refers to a code number in the response header that indicates the
		// general classification of the response.
		Code int
		// Message is a human-readable explanation specific to this occurrence of the
		// problem.
		Message string
	}
}

type InternalServerError struct {
	InnerError *struct {
		// Code refers to a code number in the response header that indicates the
		// general classification of the response.
		Code int
		// Message is a human-readable explanation specific to this occurrence of the
		// problem.
		Message string
	}
}

// Error returns an error description.
func (e *BadRequest) Error() string {
	return ""
}

// ErrorName returns "BadRequest".
func (e *BadRequest) ErrorName() string {
	return "BadRequest"
}

// Error returns an error description.
func (e *InternalServerError) Error() string {
	return ""
}

// ErrorName returns "InternalServerError".
func (e *InternalServerError) ErrorName() string {
	return "InternalServerError"
}
