// Code generated by goa v3.3.1, DO NOT EDIT.
//
// artworks client
//
// Command:
// $ goa gen github.com/pastelnetwork/walletnode/api/design

package artworks

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "artworks" service client.
type Client struct {
	RegisterEndpoint         goa.Endpoint
	RegisterJobStateEndpoint goa.Endpoint
	RegisterJobEndpoint      goa.Endpoint
	RegisterJobsEndpoint     goa.Endpoint
	UploadImageEndpoint      goa.Endpoint
}

// NewClient initializes a "artworks" service client given the endpoints.
func NewClient(register, registerJobState, registerJob, registerJobs, uploadImage goa.Endpoint) *Client {
	return &Client{
		RegisterEndpoint:         register,
		RegisterJobStateEndpoint: registerJobState,
		RegisterJobEndpoint:      registerJob,
		RegisterJobsEndpoint:     registerJobs,
		UploadImageEndpoint:      uploadImage,
	}
}

// Register calls the "register" endpoint of the "artworks" service.
func (c *Client) Register(ctx context.Context, p *RegisterPayload) (res *RegisterResult, err error) {
	var ires interface{}
	ires, err = c.RegisterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*RegisterResult), nil
}

// RegisterJobState calls the "registerJobState" endpoint of the "artworks"
// service.
func (c *Client) RegisterJobState(ctx context.Context, p *RegisterJobStatePayload) (res RegisterJobStateClientStream, err error) {
	var ires interface{}
	ires, err = c.RegisterJobStateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(RegisterJobStateClientStream), nil
}

// RegisterJob calls the "registerJob" endpoint of the "artworks" service.
func (c *Client) RegisterJob(ctx context.Context, p *RegisterJobPayload) (res *Job, err error) {
	var ires interface{}
	ires, err = c.RegisterJobEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Job), nil
}

// RegisterJobs calls the "registerJobs" endpoint of the "artworks" service.
func (c *Client) RegisterJobs(ctx context.Context) (res JobCollection, err error) {
	var ires interface{}
	ires, err = c.RegisterJobsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(JobCollection), nil
}

// UploadImage calls the "uploadImage" endpoint of the "artworks" service.
func (c *Client) UploadImage(ctx context.Context, p *UploadImagePayload) (res *Image, err error) {
	var ires interface{}
	ires, err = c.UploadImageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Image), nil
}
